---
ahoyapi: v2

commands:
  up:
    usage: Build project.
    cmd: docker-compose up -d "$@"; ahoy govcms-deploy

  down:
    usage: Delete project.
    cmd: docker-compose down

  build:
    usage: Build project.
    cmd: docker-compose up -d --build "$@"

  cli:
    usage: Start a shell inside TEST container.
    cmd: docker-compose exec test bash

  run:
    usage: Run command inside TEST container.
    cmd: docker-compose exec -T test bash -c "$@"

  govcms-deploy:
    usage: Runs deployment commands (updb, cc, set up file_stage_proxy)
    cmd: docker-compose exec -T cli govcms-deploy

  drush:
    usage: Run drush commands in TEST container.
    cmd: docker-compose exec -T test drush "$@"

  logs:
    usage: Show Docker logs.
    cmd: docker-compose logs "$@"

  ps:
    usage: List running Docker containers.
    cmd: docker-compose ps

  restart:
    usage: Restart Docker containers.
    cmd: docker-compose restart

  stop:
    usage: Stop Docker containers.
    cmd: docker-compose stop "$@"

  install:
    usage: Install the profile.
    cmd: docker-compose exec -T test drush si -y govcms "$@"; ahoy govcms-deploy

  login:
    usage: Login to a website.
    cmd: docker-compose exec -T test drush uli "$@"

  mysql-import:
    usage: Pipe in a sql file.  `ahoy mysql-import local.sql`
    cmd: |
      if [ -e "$@" ] ; then
        docker-compose exec test bash -c 'drush sql-drop' &&
        docker-compose exec -T test bash -c 'drush sql-cli' < "$@"
      else echo "Provided sql file" "$@" "does not exist"
      fi
      
  mysql-dump:
    usage: Dump data out into a file. `ahoy mysql-dump local.sql`
    cmd: docker-compose exec test bash -c 'drush sql-dump --ordered-dump' > "$@"

  lint:
    usage: Lint code
    cmd: docker-compose exec -T test lint-theme

  test-behat:
    usage: Run Behat tests.
    cmd: docker-compose exec -T test behat "$@"

  test-phpunit:
    usage: Run PHPUnit tests.
    cmd: docker-compose exec -T test phpunit "$@"

  pull:
    usage: Pull latest docker images.
    cmd: docker image ls --format \"{{.Repository}}:{{.Tag}}\" | grep govcmslagoon/ | grep -v none | xargs -n1 docker pull | cat

  audit-site:
    usage: Run site audit
    cmd: docker-compose exec -T test drutiny profile:run ci @self "$@"
